[{"/Users/nhattan/Documents/Learn/React-TheComplete-Guide-Udemy/React-Handling-Side-Effects-Reducers-Context-API/src/index.js":"1","/Users/nhattan/Documents/Learn/React-TheComplete-Guide-Udemy/React-Handling-Side-Effects-Reducers-Context-API/src/App.js":"2","/Users/nhattan/Documents/Learn/React-TheComplete-Guide-Udemy/React-Handling-Side-Effects-Reducers-Context-API/src/components/Login/Login.js":"3","/Users/nhattan/Documents/Learn/React-TheComplete-Guide-Udemy/React-Handling-Side-Effects-Reducers-Context-API/src/components/Home/Home.js":"4","/Users/nhattan/Documents/Learn/React-TheComplete-Guide-Udemy/React-Handling-Side-Effects-Reducers-Context-API/src/components/MainHeader/MainHeader.js":"5","/Users/nhattan/Documents/Learn/React-TheComplete-Guide-Udemy/React-Handling-Side-Effects-Reducers-Context-API/src/components/MainHeader/Navigation.js":"6","/Users/nhattan/Documents/Learn/React-TheComplete-Guide-Udemy/React-Handling-Side-Effects-Reducers-Context-API/src/components/UI/Button/Button.js":"7","/Users/nhattan/Documents/Learn/React-TheComplete-Guide-Udemy/React-Handling-Side-Effects-Reducers-Context-API/src/components/UI/Card/Card.js":"8"},{"size":206,"mtime":1650162389372,"results":"9","hashOfConfig":"10"},{"size":1062,"mtime":1650191001565,"results":"11","hashOfConfig":"10"},{"size":5707,"mtime":1651843012259,"results":"12","hashOfConfig":"10"},{"size":347,"mtime":1652155974617,"results":"13","hashOfConfig":"10"},{"size":368,"mtime":1650162389357,"results":"14","hashOfConfig":"10"},{"size":571,"mtime":1650162389359,"results":"15","hashOfConfig":"10"},{"size":353,"mtime":1650162389364,"results":"16","hashOfConfig":"10"},{"size":218,"mtime":1650162389368,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"u5v0p5",{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/nhattan/Documents/Learn/React-TheComplete-Guide-Udemy/React-Handling-Side-Effects-Reducers-Context-API/src/index.js",[],"/Users/nhattan/Documents/Learn/React-TheComplete-Guide-Udemy/React-Handling-Side-Effects-Reducers-Context-API/src/App.js",[],"/Users/nhattan/Documents/Learn/React-TheComplete-Guide-Udemy/React-Handling-Side-Effects-Reducers-Context-API/src/components/Login/Login.js",["35","36","37","38","39","40","41","42"],"import React, { useState, useEffect, useReducer } from 'react';\n\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\n\nconst emailReducer = (state, action) => {\n  if (action.type === 'USER_INPUT') {\n    return {\n      value: action.val,\n      isValid: action.val.includes('@')\n    }\n  }\n\n  if (action.type === 'INPUT_BLUR') {\n    return {\n      value: state.value,\n      isValid: state.value.includes('@')\n    }\n  }\n  return {\n    value: '',\n    isValid: false\n  }\n}\n\nconst passwordReducer = (state, action) => {\n  switch (action.type) {\n    case 'PASSWORD_INPUT':\n      return {\n        value: action.val,\n        isValid: action.val.trim().length > 6\n      }\n    case 'PASSWORD_BLUR':\n      return {\n        value: state.value,\n        isValid: state.value.trim().length > 6\n      }\n    default:\n      return {\n        value: '',\n        isValid: false\n      }\n  }\n}\n\n\n\nconst Login = (props) => {\n  const [enteredEmail, setEnteredEmail] = useState('');\n  const [emailIsValid, setEmailIsValid] = useState();\n  const [enteredPassword, setEnteredPassword] = useState('');\n  const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  const [emailState, dispathEmail] = useReducer(\n    emailReducer,\n    {\n      value: '',\n      isValid: undefined\n    }\n  )\n\n  const [passwordState, dispathPassword] = useReducer(passwordReducer,\n    {\n      value: '',\n      isValid: undefined\n    })\n\n  // We can remove setFormIsValid because that state upda\n\n  // useEffect(() => {\n  //   setFormIsValid(\n  //     enteredEmail.includes('@') && enteredPassword.trim().length > 6\n  //   )\n  // }, [setFormIsValid, enteredEmail, enteredPassword]);\n\n  // useEffect(() => {\n  //   console.log('Effect running!');\n\n  //   return () => {\n  //     console.log('Effect cleanup!');\n\n  //   }\n  // },\n  //   // [enteredEmail]\n  // )\n\n\n  // Object destructuring\n  const { isValid: emailIsValidOD } = emailState\n  const { isValid: passwordIsValidOD } = passwordState\n\n  // Use bouncing\n  useEffect(() => {\n\n    const identifier = setTimeout(() => {\n      console.log('Checking validity!');\n      setFormIsValid(\n        // enteredEmail.includes('@') && enteredPassword.trim().length > 6\n        // emailState.value.includes('@') && passwordState.value.trim().length > 6\n        emailIsValidOD && passwordIsValidOD\n      )\n    }, 500);\n\n    return () => {\n      console.log('Clean up!');\n      clearTimeout(identifier)\n\n    }\n  },\n    // [enteredEmail, enteredPassword]\n    // [emailState, passwordState]\n    [emailIsValidOD, passwordIsValidOD]\n  );\n\n  // useEffect(() => {\n  //   console.log('Checking validity!');\n  //   setFormIsValid(\n  //     enteredEmail.includes('@') && enteredPassword.trim().length > 6\n  //   )\n  // }, [enteredEmail, enteredPassword]);\n\n  const emailChangeHandler = (event) => {\n    // useReducer\n    dispathEmail({\n      type: 'USER_INPUT',\n      val: event.target.value\n    })\n\n\n\n    // setEnteredEmail(event.target.value);\n\n    // setFormIsValid(\n    //   event.target.value.includes('@') && enteredPassword.trim().length > 6\n    // );\n\n\n    // setFormIsValid(\n    //   //   event.target.value.includes('@') && enteredPassword.trim().length > 6\n    //   emailState.value.includes('@') && passwordState.value.trim().length > 6\n    // );\n  };\n\n  const passwordChangeHandler = (event) => {\n    // setEnteredPassword(event.target.value);\n\n    dispathPassword({\n      type: 'PASSWORD_INPUT',\n      val: event.target.value\n    })\n\n    // setFormIsValid(\n    //   // event.target.value.trim().length > 6 && enteredEmail.includes('@')\n    //   passwordState.value.trim().length > 6 && emailState.isValid\n    // );\n  };\n\n  const validateEmailHandler = () => {\n    // setEmailIsValid(enteredEmail.includes('@'));\n    // setEmailIsValid(emailState.value.includes('@'));\n\n    dispathEmail({\n      type: 'INPUT_BLUR'\n    })\n  };\n\n  const validatePasswordHandler = () => {\n    // setPasswordIsValid(enteredPassword.trim().length > 6);\n\n    dispathPassword({\n      type: 'PASSWORD_BLUR'\n    })\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    // props.onLogin(enteredEmail, enteredPassword);\n    props.onLogin(emailState.value, passwordState.value);\n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <div\n          // className={`${classes.control} ${emailIsValid === false ? classes.invalid : ''\n          //   }`}\n          className={`${classes.control} ${emailState.isValid === false ? classes.invalid : ''\n            }`}\n        >\n          <label htmlFor=\"email\">E-Mail</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            // value={enteredEmail}\n            value={emailState.value}\n            onChange={emailChangeHandler}\n            onBlur={validateEmailHandler}\n          />\n        </div>\n        <div\n          // className={`${classes.control} ${passwordIsValid === false ? classes.invalid : ''\n          className={`${classes.control} ${passwordState.isValid === false ? classes.invalid : ''\n            }`}\n        >\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            // value={enteredPassword}\n            value={passwordState.value}\n            onChange={passwordChangeHandler}\n            onBlur={validatePasswordHandler}\n          />\n        </div>\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n","/Users/nhattan/Documents/Learn/React-TheComplete-Guide-Udemy/React-Handling-Side-Effects-Reducers-Context-API/src/components/Home/Home.js",[],"/Users/nhattan/Documents/Learn/React-TheComplete-Guide-Udemy/React-Handling-Side-Effects-Reducers-Context-API/src/components/MainHeader/MainHeader.js",[],"/Users/nhattan/Documents/Learn/React-TheComplete-Guide-Udemy/React-Handling-Side-Effects-Reducers-Context-API/src/components/MainHeader/Navigation.js",[],"/Users/nhattan/Documents/Learn/React-TheComplete-Guide-Udemy/React-Handling-Side-Effects-Reducers-Context-API/src/components/UI/Button/Button.js",[],"/Users/nhattan/Documents/Learn/React-TheComplete-Guide-Udemy/React-Handling-Side-Effects-Reducers-Context-API/src/components/UI/Card/Card.js",[],{"ruleId":"43","severity":1,"message":"44","line":50,"column":10,"nodeType":"45","messageId":"46","endLine":50,"endColumn":22},{"ruleId":"43","severity":1,"message":"47","line":50,"column":24,"nodeType":"45","messageId":"46","endLine":50,"endColumn":39},{"ruleId":"43","severity":1,"message":"48","line":51,"column":10,"nodeType":"45","messageId":"46","endLine":51,"endColumn":22},{"ruleId":"43","severity":1,"message":"49","line":51,"column":24,"nodeType":"45","messageId":"46","endLine":51,"endColumn":39},{"ruleId":"43","severity":1,"message":"50","line":52,"column":10,"nodeType":"45","messageId":"46","endLine":52,"endColumn":25},{"ruleId":"43","severity":1,"message":"51","line":52,"column":27,"nodeType":"45","messageId":"46","endLine":52,"endColumn":45},{"ruleId":"43","severity":1,"message":"52","line":53,"column":10,"nodeType":"45","messageId":"46","endLine":53,"endColumn":25},{"ruleId":"43","severity":1,"message":"53","line":53,"column":27,"nodeType":"45","messageId":"46","endLine":53,"endColumn":45},"no-unused-vars","'enteredEmail' is assigned a value but never used.","Identifier","unusedVar","'setEnteredEmail' is assigned a value but never used.","'emailIsValid' is assigned a value but never used.","'setEmailIsValid' is assigned a value but never used.","'enteredPassword' is assigned a value but never used.","'setEnteredPassword' is assigned a value but never used.","'passwordIsValid' is assigned a value but never used.","'setPasswordIsValid' is assigned a value but never used."]